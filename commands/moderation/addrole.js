const { RichEmbed } = require('discord.js');
const { stripIndents } = require('common-tags');
const { promptMessage } = require('../../functions.js');

module.exports = {
    name: "addrole",
    aliases: ["–¥—Ä–æ–ª—å", "–¥–æ–±–∞–≤–∏—Ç—å—Ä–æ–ª—å", "arole"],
    category: "moderation",
    description: "–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–æ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫—É —Å–µ—Ä–≤–µ—Ä–∞",
    usage: "<id | mention> <role>",
    run: async(client, message, args) => {
        const logChannel = message.guild.channels.find(c => c.name === "logs") || message.channel;

        if (message.deletable) message.delete();

        if (!args[0]) {
            return message.reply("–ù–µ –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞? –ê –∑–∞—á–µ–º —Ç–æ–≥–¥–∞ –¥–æ–±–∞–≤–ª—è—Ç—å –µ–º—É —Ä–æ–ª—å? xD")
                .then(m => m.delete(5000));
        }

        if (!args[1]) {
            return message.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å —ç—Ç–æ–º—É —É—á–∞—Å—Ç–Ω–∏–∫—É...")
                .then(m => m.delete(5000));
        }

        if (!message.member.hasPermission("MANAGE_ROLES")) {
            return message.reply("‚ùå –£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞. –ï—Å–ª–∏ –í—ã –ø–æ–ª–∞–≥–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
                .then(m => m.delete(5000));
        }

        if (!message.guild.me.hasPermission("MANAGE_ROLES")) {
            return message.reply("‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–æ–ª–µ–π —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞. –ï—Å–ª–∏ –í—ã –ø–æ–ª–∞–≥–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞ - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.")
                .then(m => m.delete(5000));
        }

        const toRole = message.mentions.members.first() || message.guild.members.get(args[0]);
        const role = message.mentions.roles.first() || message.guild.roles.find("name", args[1]);

        if (!toRole) {
            return message.reply("–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —ç—Ç–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞? –ú–æ–∂–µ—Ç, –µ–≥–æ –Ω–∏–∫–æ–≥–¥–∞ –∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª–æ... üëª")
                .then(m => m.delete(5000));
        }

        if (!role) {
            return message.reply("–ù–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —ç—Ç—É —Ä–æ–ª—å? –ú–æ–∂–µ—Ç, –æ—à–∏–±–∫–∞ –º–æ–µ–≥–æ –±–æ—Å—Å–∞? –¢–æ–≤–∞—Ä–∏—â Discord... üôá‚Äç")
                .then(m => m.delete(5000));
        }

        const embed = new RichEmbed()
            .setColor("ORANGE")
            .setThumbnail(toRole.user.displayAvatarURL)
            .setFooter(message.member.displayName, message.author.displayAvatarURL)
            .setTimestamp()
            .setDescription(stripIndents `**> –£—á–∞—Å—Ç–Ω–∏–∫, –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–±–∞–≤–∏–ª–∏ —Ä–æ–ª—å:** ${toRole} (${toRole.id})
            **> –ë—ã–ª–∞ –≤—ã–¥–∞–Ω–∞ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º:** ${message.author} (${message.author.id})
            **> –†–æ–ª—å:** ${role}`);

        const promptEmbed = new RichEmbed()
            .setColor("GREEN")
            .setAuthor("–≠—Ç–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥...")
            .setDescription(`–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫—É ${toRole} —Ä–æ–ª—å ${role}?`);

        message.channel.send(promptEmbed).then(async msg => {
            const emoji = await promptMessage(msg, message.author, 30, ["‚úÖ", "‚ùå"]);

            if (emoji === "‚úÖ") {
                msg.delete();

                toRole.addRole(role)
                    .catch(err => {
                        if (err) return message.channel.send(`–¢–∞–∫... –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫... –ú–æ–∂–µ—Ç, –æ—à–∏–±–∫–∞!?`);
                    });
                logChannel.send(embed);
            } else if (emoji === "‚ùå") {
                msg.delete();

                message.reply("–ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ —É—á–∞—Å—Ç–Ω–∏–∫—É –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∞!")
                    .then(m => m.delete(5000));
            }
        });
    }
}